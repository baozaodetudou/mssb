   #!/usr/sbin/nft -f
flush ruleset
table inet proxy {
	set local_ipv4 {
		type ipv4_addr
		flags interval
		elements = {
			10.0.0.0/8,
			127.0.0.0/8,
			169.254.0.0/16,
			172.16.0.0/12,
			192.168.0.0/16,
			240.0.0.0/4
		}
	}

	set local_ipv6 {
		type ipv6_addr
		flags interval
		elements = {
			::ffff:0.0.0.0/96,
			64:ff9b::/96,
			100::/64,
			2001::/32,
			2001:10::/28,
			2001:20::/28,
			2001:db8::/32,
			2002::/16,
			fc00::/7,
			fe80::/10
		}
	}

	set dns_ipv4 {
		type ipv4_addr
		elements = {
			8.8.8.8,
			8.8.4.4,
			1.1.1.1,
			1.0.0.1
		}
	}

	set dns_ipv6 {
		type ipv6_addr
		elements = {
                  2001:4860:4860::8888,
                  2001:4860:4860::8844,
		          2606:4700:4700::1111,
		          2606:4700:4700::1001
		}
	}

               set fake_ipv4 {
                             type ipv4_addr
                             flags interval
                             elements = {
                             28.0.0.0/8
                           }
              }

              set fake_ipv6 {
                        type ipv6_addr
                       flags interval
                       elements = {
                       f2b0::/18
                        }
             }

        chain nat-prerouting {
             type nat hook prerouting priority dstnat; policy accept;
             fib daddr type { unspec, local, anycast, multicast } return
             ip daddr @local_ipv4 return
             ip6 daddr @local_ipv6 return
             udp dport { 123 } return
             udp dport { 53 } accept
             ip daddr @dns_ipv4 meta l4proto tcp redirect to :7877
             ip6 daddr @dns_ipv6 meta l4proto tcp redirect to :7877
             iifname { lo, eth0 } meta l4proto { tcp } redirect to :7877 
     }

           chain nat-output {
           type nat hook output priority filter; policy accept;
           fib daddr type { unspec, local, anycast, multicast } return
           ip daddr @fake_ipv4 meta l4proto tcp redirect to :7877
          ip6 daddr @fake_ipv6 meta l4proto tcp redirect to :7877
       }

	chain proxy-tproxy {
		fib daddr type { unspec, local, anycast, multicast } return
		ip daddr @local_ipv4 return
		ip6 daddr @local_ipv6 return
		udp dport { 123 } return
		udp dport { 53 } accept
		meta l4proto { udp } meta mark set 1 tproxy to :7896 accept
	}

	chain proxy-mark {
		fib daddr type { unspec, local, anycast, multicast } return
		ip daddr @local_ipv4 return
		ip6 daddr @local_ipv6 return
		udp dport { 123 } return
		udp dport { 53 } accept
		meta mark set 1
	}

	chain mangle-output {
		type route hook output priority mangle; policy accept;
		meta l4proto { udp } skgid != 1 ct direction original goto proxy-mark
	}

	chain mangle-prerouting {
		type filter hook prerouting priority mangle; policy accept;
                ip daddr @dns_ipv4 meta l4proto {  udp } ct direction original goto proxy-tproxy
                ip6 daddr @dns_ipv6 meta l4proto {  udp } ct direction original goto proxy-tproxy
		iifname { lo, eth0 } meta l4proto {  udp } ct direction original goto proxy-tproxy
	}
}